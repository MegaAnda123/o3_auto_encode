name: ðŸ§ª Test
on:
  workflow_dispatch:
  workflow_call:

jobs:
  pytest:
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        job_name: ['linux', 'windows']
        include:
          - job_name: linux
            os: ubuntu-latest
            py_version: "3.12"
          - job_name: windows
            os: windows-2022
            py_version: "3.10"

    name: pytest
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Echo run environment
        run: echo "Running on ${{ matrix.os }} (py${{ matrix.py_version }})"

      - name: Install poetry
        run: pipx install poetry==1.8.3

      - name: Install ffmpeg on Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Set up Python ${{ matrix.py_version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py_version }}
          cache: "poetry"

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run tests
        run: poetry run pytest .
